load("@aspect_bazel_lib//lib:jq.bzl", "jq")
load("@aspect_bazel_lib//lib:testing.bzl", "assert_contains")
load("@bazel_skylib//rules:build_test.bzl", "build_test")

jq(
    name = "pick_libuuid_version",
    srcs = [
        "@resolution_test_resolve//:lockfile",
    ],
    args = ["-rj"],
    filter = '.packages | map(select(.name == "libuuid1")) | .[0].version',
)

assert_contains(
    name = "test_libuuid_version",
    actual = ":pick_libuuid_version",
    expected = "2.38.1-5+deb12u1",
)

jq(
    name = "pick_quake_arch",
    srcs = [
        "@arch_all_test_resolve//:lockfile",
    ],
    args = ["-rj"],
    filter = '.packages | map(select(.name == "quake")) | .[0].arch',
)

assert_contains(
    name = "test_quake_arch",
    actual = ":pick_quake_arch",
    expected = "all",
)

jq(
    name = "pick_quake_version",
    srcs = [
        "@arch_all_test_resolve//:lockfile",
    ],
    args = ["-rj"],
    filter = '.packages | map(select(.name == "quake")) | .[0].version',
)

assert_contains(
    name = "test_quake_version",
    actual = ":pick_quake_version",
    expected = "73",
)

build_test(
    name = "build_clang",
    target_compatible_with = [
        "@platforms//os:linux",
    ],
    targets = [
        "@clang//clang",
    ],
)
