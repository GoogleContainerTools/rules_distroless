#!/usr/bin/env bash

set -o pipefail -o errexit -o nounset

lock=$(realpath "$1")
autofix=${{2:-}}

cd "$BUILD_WORKING_DIRECTORY"

echo
echo "Writing lockfile to {workspace_relative_path}"
cp "$lock" "{workspace_relative_path}"

# Detect which file we wish the user to edit
if [ -e "$BUILD_WORKSPACE_DIRECTORY/WORKSPACE" ]; then
     wksp_file="WORKSPACE"
elif [ -e "$BUILD_WORKSPACE_DIRECTORY/WORKSPACE.bazel" ]; then
     wksp_file="WORKSPACE.bazel"
elif [ -e "$BUILD_WORKSPACE_DIRECTORY/MODULE.bazel" ]; then
    wksp_file="MODULE.bazel"
else
    echo>&2 "Error: no MODULE.bazel or WORKSPACE file was found"
    exit 1
fi

# Detect a vendored buildozer binary in canonical location (tools/buildozer)
if [ -e "$BUILD_WORKSPACE_DIRECTORY/tools/buildozer" ]; then
    buildozer="tools/buildozer"
else
    # Assume it's on the $PATH
    buildozer="buildozer"
fi

echo

cmd="$buildozer 'set lock \"{lock_label}\"' $wksp_file:{repo_name}"

if [[ "$autofix" == "--autofix" ]]; then
    eval "$cmd"
else
    cat <<EOF
Run the following command to add the 'lock' attribute
to the "{repo_name}" repo in $wksp_file:

    $cmd

or run the following command to do it automatically:

    bazel run @{repo_name}//:lock -- --autofix
EOF
fi
